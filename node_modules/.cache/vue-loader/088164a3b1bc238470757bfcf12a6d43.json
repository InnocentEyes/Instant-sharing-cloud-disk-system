{"remainingRequest":"C:\\Users\\75178\\Desktop\\邮箱系统\\netdisk_mailbox_system\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\75178\\Desktop\\邮箱系统\\netdisk_mailbox_system\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\75178\\Desktop\\邮箱系统\\netdisk_mailbox_system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\75178\\Desktop\\邮箱系统\\netdisk_mailbox_system\\src\\components\\Storage.vue?vue&type=template&id=7689befb&scoped=true&","dependencies":[{"path":"C:\\Users\\75178\\Desktop\\邮箱系统\\netdisk_mailbox_system\\src\\components\\Storage.vue","mtime":1646493632110},{"path":"C:\\Users\\75178\\Desktop\\邮箱系统\\netdisk_mailbox_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644659374966},{"path":"C:\\Users\\75178\\Desktop\\邮箱系统\\netdisk_mailbox_system\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1644659453726},{"path":"C:\\Users\\75178\\Desktop\\邮箱系统\\netdisk_mailbox_system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644659374966},{"path":"C:\\Users\\75178\\Desktop\\邮箱系统\\netdisk_mailbox_system\\node_modules\\vue-loader\\lib\\index.js","mtime":1644659453726}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}